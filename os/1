mkdir: cannot create directory ‘isodir’: File exists
mkdir: cannot create directory ‘isodir/boot’: File exists
mkdir: cannot create directory ‘isodir/boot/grub’: File exists
boot.s:59: warning: symbol `loader': GLOBAL directive after symbol definition is an experimental feature
Traceback (most recent call last):
  File "/home/louis/Documents/orth/compiler/orthc", line 67, in <module>
    raise ex #Workaround. Normally one would use a traceback.* method here to pretty-print
  File "/home/louis/Documents/orth/compiler/orthc", line 46, in <module>
    transform.emit_project(e, node)
  File "/home/louis/Documents/orth/compiler/transform.py", line 247, in emit_project
    return get_transformer(node, parent).transform(out)
  File "/home/louis/Documents/orth/compiler/transformer.py", line 497, in transform
    transform.emit(out, func, self)
  File "/home/louis/Documents/orth/compiler/transform.py", line 243, in emit
    return get_transformer(node, parent).transform(out)
  File "/home/louis/Documents/orth/compiler/transformer.py", line 399, in transform
    transform.emit(out, self.node.body, self)
  File "/home/louis/Documents/orth/compiler/transform.py", line 243, in emit
    return get_transformer(node, parent).transform(out)
  File "/home/louis/Documents/orth/compiler/transformer.py", line 82, in transform
    transform.emit(out, expr, self) #From GroupExpr
  File "/home/louis/Documents/orth/compiler/transform.py", line 243, in emit
    return get_transformer(node, parent).transform(out)
  File "/home/louis/Documents/orth/compiler/transformer.py", line 180, in transform
    target=transform.get_transformer(self.node.lhs, self).transform_address(out)
  File "/home/louis/Documents/orth/compiler/transformer.py", line 314, in transform_address
    return out.get_var_name(self.node.name)
  File "/home/louis/Documents/orth/compiler/transform.py", line 166, in get_var_name
    return self.scopes[vname].name
  File "/usr/lib/python3.4/collections/__init__.py", line 790, in __getitem__
    return self.__missing__(key)            # support subclasses that define __missing__
  File "/usr/lib/python3.4/collections/__init__.py", line 782, in __missing__
    raise KeyError(key)
KeyError: 'zzz'
