import mm
import term
import panic

Terminal kterm
int base_vma
ptr multiboot_data_physaddr

import irqio
import keymap_us
import "kapps/console.ort"
import mbdata

function(ptr multiboot_struct_addr) kernel_main -> void does
	multiboot_data_physaddr=multiboot_struct_addr
	base_vma=0xC0000000

	KMM::init(base_vma+0x200000) #(Hopefully) skip past all the multiboot data we care about

	kterm = Terminal::new(base_vma+0xB8000, 80, 25)

	kterm:printl("  ..---..")

	kterm:printl(" /       \\")
	kterm:printl("|         |")
	kterm:printl(":         ;")
	kterm:print(" \\  \\")
	kterm:printa(0x0E, "~")
	kterm:printl("/  /")
	kterm:printl("  `, Y ,'")
	kterm:printl("   |_|_|")
	kterm:printl("   |===|")
	kterm:printl("   |===|")
	kterm:printl("    \\_/")
	kterm:printl("\nOrth OS. Louis G.")

	kterm:print("Higher-Half addressing enabled, base_vma=")
	kterm:dumphexi(base_vma)
	kterm:print(". kterm.baseaddr=")
	kterm:dumphexi(kterm.baseaddr|int)
	kterm:print("\nMutiboot structure physaddr=")
	kterm:dumphexi(multiboot_struct_addr|int)
	kterm:print(". vaddr?=")
	kterm:dumphexi(multiboot_struct_addr|int+base_vma)
	if multiboot_struct_addr|int<0x100000 do
		kterm:print(" OK")
	else do
		kterm:print(" OUTSIDE MAP!")
	done

	kterm:print("\nCS=")
	kterm:printi(__kgetcs())
	kterm:print(" DS=")
	kterm:printi(__kgetds())
	kterm:print(" Installing GDT: ")

	install_gdt()

	kterm:print(" Done! ")

	kterm:print("CS=")
	kterm:printi(__kgetcs())
	kterm:print(" DS=")
	kterm:printi(__kgetds())

	kterm:print("\nTesting (some) Memory: ")

	int mt_x=kterm.cursor_x

	int testpos = 0
	while testpos|int<0x100000 do
		mm_pos:offset(testpos)[0]=0|byte
		kterm:printi(testpos)
		kterm.cursor_x=mt_x
		testpos+=16
	done

	kterm:print("Done, at least ")
	kterm:printi(testpos)
	kterm:printl("b accessible off 'heap'")

	kterm:print("Installing IRQs: ")

	setup_irq()

	kterm:printl("Installed!")

	kterm:print("Heap ptr at ")
	kterm:dumphexi(mm_head|int)
	kterm:print(" , heap pos at ")
	kterm:dumphexi(mm_pos|int)
	kterm:print(" (")
	kterm:printi((mm_pos|int)-(mm_head|int))
	kterm:printl("b consumed)")

	kterm:print("BG Colors 0-16, FG Colors:")

	int bg_idx=0x0F

	while bg_idx<=0xFF do
		kterm:printa(bg_idx, ".")
		bg_idx+=0x10
	done

	int fg_idx=0x00

	while fg_idx<=0x0F do
		kterm:printa(fg_idx, "X")
		fg_idx+=1
	done
	kterm:print("\n\nREADY")

	init_keymap()

	kconsole_run()
return