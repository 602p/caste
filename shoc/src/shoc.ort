#"SHOC STARTS HERE"
import std
import fileio
import args
import lex
import grammar
import stdio
import err
import profile
import mem
import os

import searchpath

function(cstr err) shoc::bail_out -> void does
	printf("\n\nshoc::bail_out called, orth::fail traceback follows...\n")
	orth::fail(err)
return

function(int nargs, ArgList args) main -> int does
	mem::init_arena_allocator(1024*1024)

	orth::install_sigsev_handler()
	bool PROFILE=false
	if nargs>2 do 
		PROFILE=args:get(2)=="--profile"
	done

	if PROFILE do
		orth::internal::profile::install_profiler()
	done

	stdio::init()
	if nargs<2 do
		printf("E: Bad args\n")
		mem::clean_up()
		return 1
	done

	if args:get(1)=="--show-parser-types" do
		parse::init()
		parse::show_types()
		mem::clean_up()
		return 0
	done

	List search_path=List::new()
	search_path:append(os::get_cwd()+"/../lib")

	File fd = File::open(args:get(1), "r")
	cstr contents=fd:readall()+"\n"
	fd:close()

	lex::init()
	parse::init()

	printf("Parsing Text: `%s`\n", contents)

	List tokens = lex::tokenize(contents)
	parse::parse(tokens, contents)

	if PROFILE do
		orth::internal::profile::dump_profiling_data_csv("profile.csv")
	done

	mem::clean_up()
return 0