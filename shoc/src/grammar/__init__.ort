import "grammar/access.ort"
import "grammar/assignment.ort"
import "grammar/binop.ort"
import "grammar/blockbody.ort"
import "grammar/call.ort"
import "grammar/cast.ort"
import "grammar/fdecl.ort"
import "grammar/grouping.ort"
import "grammar/if.ort"
import "grammar/import.ort"
import "grammar/index.ort"
import "grammar/intrinsic.ort"
import "grammar/literal.ort"
import "grammar/name.ort"
import "grammar/name_generic.ort"
import "grammar/return.ort"
import "grammar/sep.ort"
import "grammar/tuple.ort"
import "grammar/typedecl.ort"
import "grammar/unop.ort"
import "grammar/while.ort"
import "grammar/for.ort"
import "grammar/file.ort"

function() grammar::init -> void does
	NameExpr::impl()
	DeclExpr::impl()
	AccessorExpr::impl()

	LiteralExpr::impl()
	
	GroupingExpr::impl()
	BinOpExpr::impl()
	UnOpExpr::impl()
	CastExpr::impl()
	IndexExpr::impl()

	CallExpr::impl()

	AssignmentExpr::impl()
	ReturnExpr::impl()

	TupleEndFragment::impl()
	TupleMidFragment::impl()
	Tuple::impl()
	ZeroTuple::impl()

	FunctionDeclHead::impl()
	FunctionBody::impl()
	FunctionDecl::impl()

	IfExprHead::impl()
	IfExpr::impl()
	WhileExpr::impl()
	ForExpr::impl()
	BlockBody::impl()

	IntrinsicExpr::impl()
	ImportStmt::impl()

	TypeDeclHead::impl()
	TypeDeclBody::impl()
	TypeDecl::impl()

	SepExpr::impl()

	OneTuple::impl() #Fallback matching case for one-arg function calls

	FileNode::impl()

	GenericArgListTemp::impl()
	GenericArgList::impl()
	GenericName::impl()
	DeclExpr::impl()
	AccessorExpr::impl()
return

function(List l) grammar::install -> void does
	grammar::init()

	l:append_NodeType(NameExpr_t)
	l:append_NodeType(DeclExpr_t)
	l:append_NodeType(AccessorExpr_t)

	l:append_NodeType(GenericArgListTemp_t)
	l:append_NodeType(GenericArgList_t)
	l:append_NodeType(GenericName_t)
	l:append_NodeType(DeclExpr_t)
	l:append_NodeType(AccessorExpr_t)

	l:append_NodeType(LiteralExpr_t)
	
	l:append_NodeType(GroupingExpr_t)
	l:append_NodeType(BinOpExpr_t)
	l:append_NodeType(UnOpExpr_t)
	l:append_NodeType(CastExpr_t)
	l:append_NodeType(IndexExpr_t)

	l:append_NodeType(CallExpr_t)

	l:append_NodeType(AssignmentExpr_t)
	l:append_NodeType(ReturnExpr_t)

	l:append_NodeType(TupleEndFragment_t)
	l:append_NodeType(TupleMidFragment_t)
	l:append_NodeType(Tuple_t)
	l:append_NodeType(ZeroTuple_t)

	l:append_NodeType(FunctionDeclHead_t)
	l:append_NodeType(FunctionBody_t)
	l:append_NodeType(FunctionDecl_t)

	l:append_NodeType(IfExprHead_t)
	l:append_NodeType(IfExpr_t)
	l:append_NodeType(WhileExpr_t)
	l:append_NodeType(ForExpr_t)
	l:append_NodeType(BlockBody_t)

	l:append_NodeType(IntrinsicExpr_t)
	l:append_NodeType(ImportStmt_t)

	l:append_NodeType(TypeDeclHead_t)
	l:append_NodeType(TypeDeclBody_t)
	l:append_NodeType(TypeDecl_t)

	l:append_NodeType(SepExpr_t)

	l:append_NodeType(OneTuple_t) #Fallback matching case for one-arg function calls

	l:append_NodeType(FileNode_t)
return