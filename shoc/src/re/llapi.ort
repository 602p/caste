@declare_func("_w_pcre2_compile", "ptr", "(...)")@
@declare_func("_w_pcre2_match_data_create_from_pattern", "ptr", "(...)")@
@declare_func("_w_pcre2_match", "int", "(...)")@
@declare_func("_w_pcre2_get_error_message", "void", "(...)")@
@declare_func("_w_pcre2_free_match_data", "void", "(...)")@
@declare_func("_w_pcre2_free_pattern", "void", "(...)")@
@declare_func("_w_pcre2_get_ovector_ptr", "ptr", "(...)")@
@declare_symbol("_w_PCRE2_ZERO_TERMINATED", "int")@
@declare_symbol("_w_PCRE2_NO_MATCH", "int")@

import std

function(cstr pattern, int flags) re::_llcompile -> ptr does
	int errno = 0
	int erroff = 0
	ptr res = _w_pcre2_compile(pattern, _w_PCRE2_ZERO_TERMINATED, flags, errno||ptr, erroff||ptr, 0|ptr)
	if errno!=100 do
		re::_llexplode(errno, erroff)
	done
return res

type _REOVectorBox is packed
	int start
	int end
endtype

function(ptr compiled_pattern, cstr subject, int options) re::_llmatch-> cstr does
	ptr match_data = _w_pcre2_match_data_create_from_pattern(compiled_pattern)
	int rc = _w_pcre2_match(compiled_pattern, subject, subject:len(), 0, options, match_data)
	if rc==_w_PCRE2_NO_MATCH do
		re::_free_match_data(match_data)
		return 0|cstr
	elif rc<=0 do
		re::_llexplode(rc, -1)
	done
	_REOVectorBox res = _w_pcre2_get_ovector_ptr(match_data)|_REOVectorBox
	int start=res.start
	int sz=res.end-res.start
	re::_free_match_data(match_data)
return subject:substr(start, sz)

function(int errno) re::_llgeterror -> cstr does
	cstr buf = malloc(1024)|cstr
	_w_pcre2_get_error_message(errno, buf, 1024)
return buf

function(ptr data) re::_free_match_data -> void does
	_w_pcre2_free_match_data(data)
return

function(int errno, int off) re::_llexplode -> void does
	printf("\n\n###FATAL PCRE2 INTERNAL ERROR###\n")
	printf("Error Code = %i", errno)
	if off!=-1 do
		printf(" Offset = %i", off)
	done
	printf("\nError Message: %s", re::_llgeterror(errno))
	exit(1)
return

function(ptr pattern) re::_llfreepattern -> void does
	_w_pcre2_free_pattern(pattern)
return