
function(LiteralExpr n, TransformerPass p) emit_value::for_literal -> GIRVar does
	if n.value_type=="int" do
		return GIRLiteral::emit_int(p.proj, n.value:int()|long)
	elif n.value_type=="bool" do
		return GIRLiteral::emit_bool(p.proj, n.value:int()|bool)
	elif n.value_type=="ptr" do
		return GIRLiteral::emit_null(p.proj)
	elif n.value_type=="float" do
		return GIRLiteral::emit_float(p.proj, 0.0)
	elif n.value_type=="cstr" do
		return GIRLiteral::emit_cstr(p.proj, n.value)
	else do
		shoc::bail_out("Unknown literal type: "+n.value_type)
	done
return null|GIRVar