
function(FileNode n, TransformerPass p) emit_value::for_file -> FileNode does
	int i=0
	while i<n.statements.len do
		p:emit_value(n.statements:get_Node(i))
		i+=1
	done
return n

function(BlockBody n, TransformerPass p) emit_value::for_blockbody -> BlockBody does
	int i=0
	while i<n.statements.len do
		p:emit_value(n.statements:get_Node(i))
		i+=1
	done
return n

function(FunctionDecl n, TransformerPass p) emit_value::for_func -> FunctionDecl does
	if -n.head.is_extern do
		int i=0
		p.proj:enter_method_named(n.head.name)
		while i<n.body.len do
			p:emit_value(n.body:get_Node(i))
			i+=1
		done
		p.proj:exit_method()
	done
return n

function(TypeDecl n, TransformerPass p) emit_value::for_typedecl -> TypeDecl does
	int i=0
	while i<n.body.statements.len do
		if -n.body.statements:get_Node(i):is_a("DeclExpr") do
			p:emit_value(n.body.statements:get_Node(i))
		done
		i+=1
	done
return n
