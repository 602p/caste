
function(TypeDecl n, TransformerPass p) predefine_types::visit_type -> TypeDecl does
	shoc::assert(-p.proj.types:contains(n.head:nongeneric_name()), "Duplicate definition of type "+n.head:nongeneric_name())
	StructOType new_t = StructOType::new(n.head:nongeneric_name())|StructOType
	p.proj:add_Type(new_t|OType)
	new_t.packed = n.head.packed
return n

function() predefine_types::init -> TransformerPass does
return TransformerPass::new("predefine_types")\
       :add_specialization("TypeDecl", predefine_types::visit_type|NodeTransformer)