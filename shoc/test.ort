type TypeDecl is packed
	NodeType type_
	TypeDeclHead head
	TypeDeclBody body

	function(TypeDecl node, int depth) TypeDecl::print -> void does
		printf("TypeDecl:\n")
		parse::indent(depth+1)
		printf("|- Head: ")
		(node.head|Node):print(depth+2)
		parse::indent(depth+1)
		printf("\\- Body: ")
		(node.body|Node):print(depth+2)
	return

	function(EleList eles) TypeDecl::create -> TypeDecl does
		TypeDecl new = malloc(@sizeof(TypeDecl)@)|TypeDecl
		new.head=eles:get(0):n()|TypeDeclHead
		new.body=eles:get(1):n()|TypeDeclBody
	return new

	function(EleList eles) TypeDecl::match -> int does
		if (-eles:get(0):n():is_a("TypeDeclHead")):or(\
		    -eles:get(1):n():is_a("TypeDeclBody")) do
			return 0
		done
	return 2

	function() TypeDecl::impl -> NodeType does
	return NodeType::new("TypeDecl")\
					:set_printer(TypeDecl::print |NodePrinter)\
					:set_creator(TypeDecl::create|NodeCreator)\
					:set_matcher(TypeDecl::match |NodeMatcher)\
					:matches(2):matches_only_nodes()
endtype

1+