./shoc <main_project_filename.ort> [args]

Use -f<flag> to set a flag. Flags include:
	-fdump_ast			: Dump AST after transformatiosn
	-fdump_pre_ast		: Dump AST before transofmations
	-fdump_methods		: Dump method Metadata
	-fdump_locals		: Dump local metadata (sets dump_methods)
	-fdump_gir			: Dump GIR code (sets dump_methods)
	-fdump_globals		: Dump global variable metadata
	-fdump_types		: Dump type metadata
	-fdump_node_types	: Dump internal parser grammar node types
	-fno_clean			: Don't remove intermediate compilation files (.ir and .s)
	-fno_finish_build	: Don't go further than IR emission
	-fno_llvm_out		: Don't go further than GIR generation
	-fprofile_dump_csv	: Run profiler (if installed) and dump data as 'profile.csv'
	-ffunchooks			: Build with funchooks debugging support enabled (will build slow as balls executables when using standard lib/err!)
	-fxfunchooks		: Build with extended funchooks debugging support enabled (reenter_function callback)
	-fverbose			: Print status info while building (fancy progress bars)
	-fno_opt			: Skip optimization transformer passes

Use -s<path> to add stuff to the search path (insert before default path)
Default search path is (in order): [., ./lib, ../lib, ../../lib]

Use -o<path> to specify output path. Executable will built to this path, and intermediate files will be named <path>.ir and <path>.s

Use -O<num> to pass optimization flags to llc and gcc

Passing -v sets the flag `verbose`, and is equivilent to passing -fverbose

Use -w<flag> to enable warnings. This sets the flag `warn_<flag>`, and is equivilent to passing -fwarn_<flag>. Warnings include:
	-wunused			: Print warnings about unused methods. These will be optimized away as well
	-wduplicate			: Print warnings about duplicate or ambiguous locals
	-wstyle				: Print warnings on old-style syntax
	-wtypes				: Print warnings on illegal assignments, etc
	-wstrict_types		: Include cstr <--> ptr issues in above

Shimming examples:
	-s../lib/err_lite for shimming the err tools
	-s../lib/nounwind_shim for shimming the libunwind tools