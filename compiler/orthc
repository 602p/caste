#!/usr/bin/python3

import sys, drawblockdiag, tokenize, parse, grammarutil, json, os

string=open(sys.argv[1], 'r').read()

tokens=tokenize.tokenize(string)
#print(tokens)
with open('tokens.txt', 'w') as fd:
	fd.write("\n".join(str(t) for t in tokens))
node=parse.parse(tokens)
print(node)
drawblockdiag.emit_node_file(open('out.bd', 'w'), node, portrait_mode=True)

print("\033[92mCompiling...\033[0m")

import transform, transformer, datamodel


with open("out.ll", 'w') as fd:
	e=transform.Emitter(fd)
	# e.types['Person']=datamodel.UserOType()
	with e.scope():
		with e.context(file="in"):
			transform.emit(e, node)
	e.emit_global_statments()

os.system("llc out.ll;gcc -o "+(sys.argv[2] if len(sys.argv)==3 else "out")+" out.s; rm out.s")
