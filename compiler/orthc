#!/usr/bin/python3

import sys, drawblockdiag, tokenize, parse, grammarutil, json, os

_print=print
def print(*a, **k):
	_print(*a, **k)
	sys.stdout.flush()

print("Reading...                       ", end="")
string=open(sys.argv[1], 'r').read()

print("\rTokenizing...                       ", end="")
tokens=tokenize.tokenize(string, sys.argv[1])

print("\rTokenizing... [Dumping Tokens]             ", end="")
with open('tokens.txt', 'w') as fd:
	fd.write("\n".join(str(t) for t in tokens))

print("\rParsing...                       ", end="")
node=parse.parse(tokens)

print("\rParsing... [Drawing BD]                 ", end="")
drawblockdiag.emit_node_file(open('out.bd', 'w'), node, portrait_mode=True)

print("\rPreparing Transformer...                       ", end="")
import transform, transformer, datamodel

print("\rTransforming...                       ", end="")
with open("out.ll", 'w') as fd:
	e=transform.Emitter(fd)
	with e.scope():
		with e.context(file="in"):
			try:
				transform.emit(e, node)
			except BaseException as ex:
				print("*********************************************\n"*10)
				print(ex)
				print("SCOPES: ", e.scopes)
				print("SIGNAT: ", e.signatures)
				print("GLOBAL: ", e.globals)
				print("INCLUD: ", e.included_files)
				print("TYPE  : ", e.types)
				print("LASTLI: ", e.last_line)
				print("LASTFI: ", e.last_file)
				print("LASTME: ", e.last_method)
				sys.exit(1)

	e.emit_global_statments()

if not "nobuild" in sys.argv:
	print("\rCompiling...                       ", end="")
	os.system("llc out.ll;")

if not "nolink" in sys.argv:
	print("\rLinking...                       ", end="")
	os.system("gcc -o "+(sys.argv[2] if len(sys.argv)==3 else "out")+" out.s; rm out.s")

print("\r\033[92mDone!\033[0m                                        ")