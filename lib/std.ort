@declare_c_func("printf", "int", "(...)")@
@declare_c_func("puts", "int", "(i8*)")@
@declare_c_func("sprintf", "int", "(...)")@
@declare_c_func("scanf", "int", "(...)")@
@declare_c_func("malloc", "ptr", "(i32)")@
@declare_c_func("realloc", "ptr", "(i8*, i32)")@
@declare_c_func("strcat", "cstr", "(i8*, i8*)")@
@declare_c_func("memcpy", "void", "(i8*, i8*, i32)")@
@declare_c_func("strcpy", "cstr", "(i8*, i8*)")@
@declare_c_func("strncpy", "void", "(i8*, i8*, i32)")@
@declare_c_func("strlen", "int", "(i8*)")@
@declare_c_func("atoi", "int", "(i8*)")@
@declare_c_func("strcmp", "int", "(i8*, i8*)")@
@declare_c_func("strncmp", "int", "(i8*, i8*, i32)")@
@declare_c_func("free", "int", "(...)")@
@declare_c_func("exit", "int", "(i32)")@

function(cstr a, cstr b) cstr:__add__ -> cstr does
	cstr result = malloc(strlen(a)+strlen(b)+1)
	strcpy(result, a)
	strcat(result, b)
return result

function(cstr a, int b) cstr:__mul__ -> cstr does
	int sz = strlen(a)*b
	sz+=1
	cstr result = malloc(sz)
	int idx=b
	while b>0 do
		b-=1
		strcat(result, a)
	done
return result

function(ptr a, int b) ptr:offset -> ptr does
return ((a|long)+(b|long))|ptr

function(cstr a, int b) cstr:offset -> cstr does
return (a|ptr):offset(b)|cstr

function(cstr a, cstr b) cstr:__eq__ -> bool does
return strcmp(a,b)==0

function(ptr a, ptr b) ptr:__eq__ -> bool does
return (a|long)==(b|long)

function(cstr s) cstr:free -> void does
	free(s)
return

function(cstr s) cstr:int -> int does
return atoi(s)

function(byte b, cstr s) byte:in -> bool does
	int i=0
	while i<s:len() do
		if s[i]==b do
			return 1|bool
		done
		i+=1
	done
return 0|bool

function(cstr s) cstr:len -> int does
return strlen(s)

function(cstr s, int start, int len) cstr:substr -> cstr does
	cstr res = malloc(len+1)|cstr
	strncpy(res, s:offset(start), len)
	res[len]=0|byte
return res

function(cstr s, cstr o, int l) cstr:equals_l -> bool does
	int i=0
	while i<l do
		if s[i]!=o[i] do
			return false
		done
		i+=1
	done
return true

function(cstr s, cstr o) cstr:startswith -> bool does
return s:equals_l(o, o:len())

function(cstr s, cstr t) cstr:find -> int does
	int pos = 0
	while pos<s:len() do
		if strncmp(t, s:offset(pos), t:len())==0 do
			return pos
		done
		pos+=1
	done
return -1

function(cstr s, cstr t) cstr:contains -> bool does
return s:find(t)!=-1

function(int i) int:str -> cstr does
	cstr str = malloc(20)
	sprintf(str, "%i", i)
return str

function(cstr prompt) read_int -> int does
	int result
	ptr result_ptr=result||ptr
	printf(prompt)
	scanf("%d", result_ptr)
return result

function(cstr prompt) read_line -> cstr does
	cstr result = malloc(256)
	printf(prompt)
	scanf("%s", result) #Horrible and unsafe
return result

function(cstr c) ord -> int does
return c[0]|int

function(cstr s) prints -> void does
	printf("%s", s)
return